{"version":3,"sources":["apis/dictionary.js","history.js","actions/index.js","actions/types.js","components/words/WordCreate.js","components/words/WordDelete.js","components/words/WordEdit.js","components/words/Pagination.js","components/GoogleAuth.js","components/Header.js","components/words/WordList.js","components/words/WordShow.js","components/words/FrontPage.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/userReducer.js","reducers/transReducer.js","reducers/postReducer.js","reducers/postexReducer.js","index.js"],"names":["axios","create","baseURL","createHistory","require","createBrowserHistory","createGoogle","formValues","_ref4","Object","asyncToGenerator","regenerator_default","a","mark","_callee4","dispatch","getState","userId","responseGoogle","_id","responseOxford","wrap","_context4","prev","next","auth","word","history","push","dict","data","post","objectSpread","type","payload","sent","image","img","createBing","stop","_x5","_x6","apply","this","arguments","_ref5","_callee5","responseBing","_context5","_x7","_x8","UpdateMeaning","_ref10","_callee10","_context10","_x17","_x18","fetchDictPerPage","page","_ref17","_callee17","response","_context17","docs","total","Number","pages","_x30","WordCreate","renderInput","_ref","input","meta","label","react_default","createElement","className","assign","placeholder","class","autofocus","autocomplete","_this","renderError","onSubmit","props","createDict","error","_ref2","touched","handleSubmit","Field","name","component","React","Component","formWrapped","reduxForm","form","validate","errors","connect","state","oxford","WordDelete","WordEdit","fetchDict","match","params","id","console","log","ownProps","_ref18","_callee18","_context18","get","concat","_x31","Pagination","currentUserId","_this2","style","display","onClick","e","user","GoogleAuth","onAuthChange","isSignedIn","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","clearDict","clearUser","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","displaySignIn","renderAuthButton","_callee2","_context2","_x2","_callee","_context","_x","Header","clearSubmit","aria-label","autoFocus","react_router_dom","to","data-toggle","data-target","aria-controls","aria-expanded","action","method","autoComplete","components_GoogleAuth","onSubmitSuccess","result","reset","WordList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","playSound","audio","Audio","play","handleExampleChange","setState","myExample","target","value","onFormSubmitExample","preventDefault","stopPropagation","postMyExample","renderMyExample","yex","map","eachExample","deleteWord","firstRender","index","fontSize","aud","src","width","alt","pro","vi","eachVietMean","key","onChange","ex","en","eachMeaning","cat","eachImage","_this3","dicts","length","renderMeaning","components_Header","fontFamily","words_Pagination","renderList","values","postex","_ref14","_callee14","_context14","_x25","_x26","_ref13","_callee13","_context13","_x23","_x24","WordShow","renderMainpage","keys","showData","renderGoogle","google","lineHeight","renderOxford","renderSaveSection","renderImage","ShowMyExample","removeMyExample","renderShowMyExample","renderShowVietMeaning","renderFirstVietMeaning","removeEngmean","eachEngMean","removeEngMean","renderShowEngMeaning","renderShowExample","eachEngExample","insertEngExample","renderShowpImage","eachimage","removeSaveImage","showImage","onSaveExampleClick","updateSaveMeaning","onSubmitTheCorrectWord","googleClickMe","sentences","trans","renderGoogleElement","index1","Math","floor","random","pos","entry","vietMean","insertVietmean","htmlFor","reverse_translation","each","text","renderOxfordAudio","autoPlay","phonetic","renderOxfordBody","audiolink","phoneticSpelling","pro1","pronunciations","forEach","pro2","audioFile","phoneticNotation","eachOxford","lexicalCategory","renderMeaningExample","entries","senses","sense","index2","renderMainDefinition","renderMainExample","renderSubMean","mouseEnter","definition","def","mouseLeave","insertEngmean","engMeaning","showEngMean","definitions","onMouseEnter","onMouseLeave","opacity","translateEngExample","renderVietTranslate","engExample","showEngExample","example","myTranslate","myTrans","translate","examples","subsenses","subsense","submeanIndex","renderSubMeaning","renderSubExample","shortDefinitions","crossReferenceMarkers","index3","selectImage","bing","vietMeaning","engMeanCheckBox","showExample","_ref6","_callee6","_context6","abrupt","_x9","_x10","_ref3","_callee3","_context3","_x3","_x4","_ref15","_callee15","_context15","_x27","_x28","_ref7","_callee7","_context7","_x11","_x12","_ref9","_callee9","_context9","_x15","_x16","_ref11","_callee11","_context11","_x19","_x20","_ref12","_callee12","_context12","_x21","_x22","_ref8","_callee8","_context8","_x13","_x14","FrontPage","renderGoogleAuthButton","App","react_router","path","exact","INITIAL_STATE","combineReducers","undefined","_","omit","formReducer","mapKeys","defineProperty","toString","mex","includes","filter","newState","JSON","stringify","splice","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDom","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.41796dcc.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://project-thienthuan171.c9users.io/eng'\n})","const createHistory = require(\"history\").createBrowserHistory;\n\nexport default createHistory();\n","import { SIGN_IN,\n        SIGN_OUT,\n        FETCH_DICTS,\n        DELETE_DICT,\n        EDIT_DICT,\n        CLEAR_DICT\n} from './types.js';\n\n\nimport dict from '../apis/dictionary';\nimport history from '../history';\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    };\n};\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT,\n    };\n};\n\nexport const clearDict = formValues => async (dispatch) => {\n    dispatch({type: CLEAR_DICT, payload: null})\n    dispatch({type: 'CLEAR_POST', payload: null})\n}\n\nexport const clearUser = formValues => async (dispatch) => {\n    dispatch({type: 'CLEAR_USER', payload: null})\n    history.push('/')\n}\n\nexport const updateSaveMeaning = formValues => async (dispatch, getState) => {\n    if(getState().dict.data){\n    dict.post('/update', {data:{...getState().post, _id: getState().dict.data._id}})\n    }\n    dispatch({type: 'CLEAR_POST', payload: null})\n}\n\nexport const createGoogle = formValues => async (dispatch, getState) => {\n    const {userId} = getState().auth;\n    if(userId && formValues.word) {\n        history.push('/words/show')\n        if(getState().dict.data){\n            dict.post('/update', {data:{...getState().post, _id: getState().dict.data._id}})\n        }\n        dispatch({type: CLEAR_DICT, payload: getState()})\n        dispatch({type: 'CLEAR_POST', payload: null})\n        const responseGoogle = await dict.post('/google',{...formValues, userId});\n        dispatch({type: 'CREATE_GOOGLE', payload: responseGoogle.data});\n        // Check the word is valid ?\n        if(responseGoogle.data.data) {\n            const _id =responseGoogle.data.data._id\n            formValues.word = responseGoogle.data.data.word\n            \n            const responseOxford = await dict.post('/oxford',{...formValues, _id: _id});\n            if(responseOxford.data.image){ // Have image in the database\n                dispatch({type: 'CREATE_OXFORD', payload: responseOxford.data});\n                //Have image in the database - Go with update imgae to database\n                dict.post('/bingimage',{img: getState().dict.image[0][0], _id:_id});\n            } else {\n                dispatch({type: 'CREATE_OXFORD', payload: responseOxford.data});\n                dispatch(createBing(formValues, _id));\n            }\n        }\n    }\n};\nexport const createBing = (formValues,_id) => async (dispatch, getState) => {\n    // Remember to createDict only have a userId attach to it\n    const {userId} = getState().auth;\n    if(userId) {\n        const responseBing = await dict.post('/bing',{...formValues});\n        dispatch({type: 'CREATE_IMAGE', payload: responseBing.data});\n        dict.post('/bingimage',{img: getState().dict.image[0][0], _id:_id});\n    }\n};\n\n\nexport const translateEngExample = (example) => async (dispatch, getState) => {\n    dispatch({type: 'CLEAR_TRANSLATE', payload: null});\n    const response = await dict.post('/trans',{trans:example});\n    dispatch({type: 'TRANSLATE', payload: response.data});\n    return response\n}\n\n\n\nexport const showExample = (data) => async (dispatch, getState) => {\n    dispatch({type: 'SHOW_VIET_MEAN', payload: data});\n}\nexport const showImage = (image) => async (dispatch, getState) => {\n    dispatch({type: 'SHOW_IMAGE', payload: image});\n}\nexport const showEngMean = (data, lexicalCategory) => async (dispatch, getState) => {\n    dispatch({type: 'SHOW_ENG_MEAN', payload: {cat: lexicalCategory, en:[data]}});\n}\nexport const UpdateMeaning = () => async (dispatch, getState) => {\n}\nexport const showEngExample = (data) => async (dispatch, getState) => {\n    dispatch({type: 'SHOW_ENG_EXAMPLE', payload: data});\n}\nexport const ShowMyExample = (data) => async (dispatch, getState) => {\n    dispatch({type: 'SHOW_MY_EXAMPLE', payload: data});\n}\n\nexport const postMyExample = (yex, id) => async (dispatch, getState) => {\n    dispatch({type: 'DISPLAY_MY_EXAMPLE', payload: {yex:yex, _id:id}});\n    await dict.post('/updateexample', {yex:yex, _id:id})\n}\n\n\nexport const deleteWord = (id) => async (dispatch, getState) => {\n    dispatch({type: 'DELETE_WORD', payload: id});\n    await dict.post('/delete', {_id:id})\n}\n\n\nexport const removeEngMean = (data) => async (dispatch, getState) => {\n    dispatch({type: 'REMOVE_ENG_MEAN', payload: data});\n}\nexport const fetchDicts = (userId) => async dispatch => {\n    const response = await dict.get(`/dict/${userId}`);\n    dispatch({type: FETCH_DICTS, payload: response.data});\n}\nexport const fetchDictPerPage = (userId, page) => async dispatch => {\n    const response = await dict.post('/review-page', {page: page, userId: userId});\n    dispatch({type: 'FETCH_DICTS_PER_PAGE', payload: {data: response.data.docs, total: response.data.total, page:Number(response.data.page), pages: response.data.pages}});\n}                                                                            \n\nexport const fetchDict = (userId) => async dispatch => {\n    const response = await dict.get(`/dict/${userId}`);\n    dispatch({type: FETCH_DICTS, payload: response.data});\n}\nexport const editDict = (_id, formValues) => async dispatch => {\n    const response = await dict.put(`/dict/${_id}`, formValues);\n    dispatch({type: EDIT_DICT, payload: response.data});\n};\nexport const deleteDict = (_id) => async dispatch => {\n    await dict.put(`/dict/${_id}`);\n    dispatch({type: DELETE_DICT, payload: _id});\n};","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const CREATE_DICT = 'CREATE_DICT';\nexport const FETCH_DICTS = 'FETCH_DICTS';\nexport const FETCH_DICT = 'FETCH_DICT';\nexport const DELETE_DICT = 'DELETE_DICT';\nexport const EDIT_DICT = 'EDIT_DICT';\nexport const CLEAR_DICT = 'CLEAR_DICT';","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport { connect } from 'react-redux';\nimport { createGoogle } from '../../actions';\n\n\nclass WordCreate extends React.Component {\n    renderError({error, touched}) {\n        if(touched && error) {\n            return (\n                <div className = \"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            \n            );\n        }\n    }\n    \n    renderInput = ({input, label, meta}) => {\n        // console.log(meta)\n        return (\n            <div>\n                <div className=\"form-inline mt-2\">\n                    <input {...input} placeholder=\"type here\" class=\"form-control w-25\" autofocus autocomplete=\"off\"/>\n                    <button className=\"btn btn-success ml-2\">Search</button>\n                </div>\n                {this.renderError(meta)}\n            </div>\n        );\n    }\n    \n    \n    onSubmit = (formValues) => {\n        this.props.createDict(formValues)\n    }\n    \n    render() {\n        return (\n            <div className=\"container pb-2\">\n                <h1 class=\"mt-5\">Looking for new words?</h1>\n                <lead>That's great! Let's find out something interesting </lead>\n                <div className=\"form-inline\"></div>\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                    <Field name=\"word\" component={this.renderInput} />\n                </form>\n            </div>\n            );\n    }\n}\n\n\nconst validate = (formValues) => {\n    const errors = {};\n    if(!formValues.word) {\n       errors.word = 'Enter the word'; \n    }\n     return errors;\n};\n\n\nconst formWrapped = reduxForm({\n    form: 'wordCreate',\n    validate: validate\n})(WordCreate);\n\n\nconst mapStateToProps = (state) => {\n    // console.log(\"CREATE STATE\",state)\n    return {oxford: state.dict}\n}\n\n\nexport default connect(mapStateToProps, {createGoogle})(formWrapped)","import React from 'react';\n\n\nconst WordDelete = () => {\n    return <div>WordDelete</div>\n}\n\nexport default WordDelete;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchDict } from '../../actions'\n\n\nclass WordEdit extends React.Component {\n    \n    // Insert with User ID as well\n    componentDidMount(){\n        // console.log(\"componentDidMount\",this.props.match.params.id)\n        this.props.fetchDict(this.props.match.params.id);\n    }\n    \n    \n    // console.log(\"props on Word edit\", props)\n    render () {\n        console.log(this.props)\n        if(!this.props.dict){\n            return <div>LOADING.....</div>\n        }\n        return <div>{this.props.dict.word}</div>\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    // console.log(state)\n    return {dict: state.dict[ownProps.match.params.id] }\n}\n\nexport default connect(mapStateToProps, {fetchDict})(WordEdit);","import React from 'react';\nimport { connect} from 'react-redux';\nimport { fetchDictPerPage } from '../../actions'\n\nclass Pagination extends React.Component {\n    \n    fetchDictPerPage = (page) => {\n        // console.log('this.props', this.props)\n        this.props.fetchDictPerPage(this.props.currentUserId,page);\n    }\n    \n    render () {\n        if(this.props.currentUserId && this.props.total > 0){\n            return (\n               <div>\n                    <nav>\n                      <ul className=\"pagination\">\n                        <li style={{display: this.props.page === 1 ? 'none' : 'block'}} onClick = {e => this.fetchDictPerPage(1)} className=\"page-item text-sm page-link\"><button  >{'<<'}</button></li>\n                        <li style={{display: this.props.page === 1 ? 'none' : 'block'}} onClick = {e => this.fetchDictPerPage(this.props.page-1)} className=\"page-item text-sm\"><button className=\"page-link\" >{'<'}</button></li>\n                        <li style={{display: 'block'}} className=\"page-item active\"><button className=\"page-link\">{this.props.page}</button></li>\n                        <li style={{display: this.props.pages - this.props.page >= 1  ? 'block' : 'none'}} onClick = {e => this.fetchDictPerPage(this.props.page+1)} className=\"page-item\"><button className=\"page-link\" >{this.props.page+1}</button></li>\n                        <li style={{display: this.props.pages - this.props.page >= 2  ? 'block' : 'none'}} onClick = {e => this.fetchDictPerPage(this.props.page+2)} className=\"page-item\"><button className=\"page-link\" >{this.props.page+2}</button></li>\n                        <li style={{display: this.props.pages === this.props.page ? 'none' : 'block'}} onClick = {e => this.fetchDictPerPage(this.props.page+1)} className=\"page-item\"><button className=\"page-link\" >Next</button></li>\n                        <li style={{display: this.props.pages === this.props.page ? 'none' : 'block'}} onClick = {e => this.fetchDictPerPage(this.props.pages)} className=\"page-item\"><button className=\"page-link\" >{'>>'}</button></li>\n                      </ul>\n                    </nav>\n               </div>\n               );\n            } else {\n                return null\n            }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUserId: state.auth.userId,\n        page: state.user.page,\n        pages: state.user.pages,\n        total: state.user.total\n    }\n}\n\nexport default connect(mapStateToProps,{fetchDictPerPage})(Pagination)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut, clearDict, clearUser, fetchDictPerPage } from '../actions'\n\nclass GoogleAuth extends React.Component {\n    // state = { isSignedIn: null};\n    componentDidMount () {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '460453499273-hfk4sctvo8rqrs204dppuf9uhvqk7mjj.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange)\n            });\n        })\n    }\n    \n    onAuthChange = (isSignedIn) => {\n        if(isSignedIn) {\n            this.props.signIn(this.auth.currentUser.get().getId());\n            this.props.fetchDictPerPage(this.auth.currentUser.get().getId(),1)\n        } else {\n            this.props.signOut();\n        }\n    }\n    \n    \n    onSignInClick = () => {\n        this.auth.signIn();\n    }\n    \n    onSignOutClick = () => {\n        this.auth.signOut();\n        this.props.clearDict();\n        this.props.clearUser();\n    }\n    \n    renderAuthButton () {\n        if(this.props.displaySignIn) {\n            if(this.props.isSignedIn === null){\n                return null\n            } else if (this.props.isSignedIn) {\n                return (\n                    <button onClick={this.onSignOutClick} className=\"btn btn-danger\">\n                         <i className=\"fa fa-google\"/>\n                         <span> </span>Sign Out\n                    </button>\n                );\n            } else {\n                return (\n                    <button onClick={this.onSignInClick} className=\"btn btn-danger\">\n                         <i className=\"fa fa-google\" />\n                         <span> </span>Sign In with Google\n                    </button>\n                );\n            }\n        }\n    }\n    \n    render() {\n        return <div>{this.renderAuthButton() }</div>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { isSignedIn: state.auth.isSignedIn}\n}\n\n\n\nexport default connect(mapStateToProps, {fetchDictPerPage, clearUser, signIn, signOut, clearDict})(GoogleAuth);","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport GoogleAuth from './GoogleAuth'\nimport { Field, reduxForm, reset } from 'redux-form'\nimport { connect } from 'react-redux';\nimport { createGoogle } from '../actions';\nimport { createBing } from '../actions';\nimport { UpdateMeaning } from '../actions';\n\n\n\n\nclass Header extends React.Component {\n\n    onSubmit = (formValues) => {\n        this.props.clearSubmit()\n        this.props.UpdateMeaning()\n        this.props.createGoogle(formValues)\n    }\n\n    renderInput = ({input, label, meta}) => {\n        return (\n            <div>\n                <input {...input} className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" name=\"word\" autoFocus/>\n                <button className=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Search</button>\n            </div>\n        );\n    }\n\n\n    render() {\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-primary\">\n                  <Link to=\"/\" className=\"navbar-brand\">\n                         Dictionary\n                  </Link>\n                  <ul className=\"navbar-nav\">\n                  <li className=\"nav-item\">\n                    <Link to=\"/review\" className=\"nav-link\">\n                         Review\n                     </Link>\n                  </li>\n                  </ul>\n                  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#myNav\" aria-controls=\"navbarNav\"\n                    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                  </button>\n                  <div className=\"collapse navbar-collapse nav-pills\" id=\"myNav\">\n                    <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"form-inline ml-3\" action=\"/dict\" method=\"post\" name=\"word\" autoComplete=\"off\">\n                        <Field name=\"word\" component={this.renderInput} />\n                    </form>\n                    <div className='ml-auto'>\n                        <GoogleAuth displaySignIn={this.props.displaySignIn} />\n                    </div>\n                  </div>\n                </nav>\n            </div>\n        );\n    }\n}\n\n\nconst afterSubmit = (result, dispatch) =>\n  dispatch(reset('wordCreate'));\n\nconst formWrapped = reduxForm({\n    form: 'wordCreate',\n    onSubmitSuccess: afterSubmit\n})(Header);\n\n\nconst mapStateToProps = (state) => {\n    return {oxford: state.dict}\n}\n\n\n\nexport default connect(mapStateToProps, {createGoogle, createBing, UpdateMeaning})(formWrapped)","import React from 'react';\nimport { connect} from 'react-redux';\nimport { fetchDictPerPage } from '../../actions'\nimport { postMyExample, deleteWord } from '../../actions'\nimport './styles/ShowStyle.css';\nimport Pagination from './Pagination'\nimport Header from '../Header'\nclass WordList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstRender: 'linh',\n            myExample:'',\n            id : ''\n        };\n    }\n    // componentDidUpdate() {\n    //     // console.log(\"componentDidUpdate this.state\", this.state)\n    //     // console.log(\"componentDidUpdate this.props\", this.props)\n    //     if(this.state.firstRender){\n    //         if(this.props.currentUserId){\n    //             console.log(\"this.props.fetchDictPerPage(this.props.currentUserId,1);\", this.props.currentUserId)\n    //             this.props.fetchDictPerPage(this.props.currentUserId,1);\n    //             this.setState({firstRender : ''})\n    //             console.log(\"this.state\", this.state)\n    //             this.setState({firstRender : ''})\n    //             console.log(\"this.state\", this.state)\n    //         }\n    //     }\n    // }\n    componentDidMount() {\n        console.log(\"componentDidMount\", this.props)\n        if(this.props.currentUserId){\n            console.log(\"componentDidMount\", this.props)\n            this.props.fetchDictPerPage(this.props.currentUserId,1);\n        }\n    }\n    playSound = (audio) => {\n       const sound = new Audio(audio)\n       sound.play();\n    }\n    \n    handleExampleChange = (e, id) => {\n        this.setState({myExample: e.target.value, id:id});\n    }\n    \n    onFormSubmitExample = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.postMyExample(this.state.myExample, this.state.id)\n        this.setState({myExample: '', id: ''});\n    }\n    \n    renderMyExample = (id) => {\n        if(this.props.post.yex){\n            return this.props.post.yex.map(eachExample => {\n                if(eachExample._id === id){\n                    return <p className=\"text-danger font-italic\">\"{eachExample.yex}\"</p>\n                }\n                else {\n                    return null\n                }\n            })\n        }\n    }\n    \n    deleteWord = (id) => {\n        console.log(id)\n        this.props.deleteWord(id)\n    }\n    \n    \n    renderMeaning(data, index) {\n        return (\n            <div className=\"row\">\n                <div className= \"col-sm-8\">\n                    <span onClick={e => this.deleteWord(data._id)}className=\"float-right text-danger x-text pr-1\">\n                        <i  className=\"fa fa-trash\" style={{ fontSize: '1.8rem'}}></i>\n                    </span>\n                    <p className=\"text-success  h4 font-weight-bold text-capitalize\">{index+1}. {data.word}</p>\n                        <span onClick={e =>{this.playSound(data.aud)}}>\n                            <audio src={data.aud}>\n                            </audio><img src=\"https://img.icons8.com/metro/26/000000/speaker.png\" width=\"20px\" alt=\"speaker\"/>\n                        </span>\n                    <span className=\"h5\"> [{data.pro}]</span>\n                    <div>\n                    <p className=\"font-weight-bold h5 my-1 mt-2\">{data.vi.map((eachVietMean, index) => {\n                        if (index===0){\n                            return <span key={`${eachVietMean}1`}> {eachVietMean}</span>\n                        } else {\n                            return <span key={eachVietMean}>, {eachVietMean}</span>\n                        }\n                    })}</p>\n                    </div>\n                    \n                    \n                    <form className=\"pt-2\" onSubmit={this.onFormSubmitExample}>\n                        <input onChange={e => this.handleExampleChange(e, data._id)} value={this.state.id === data._id ? this.state.myExample: ''} type=\"text\" className=\"your-example mt-2\" placeholder=\"Input your example here...\"/>\n                    </form>\n             \n                    <hr/>\n                    <div>\n                        {this.renderMyExample(data._id)}\n                    </div>\n                    <div>\n                        {\n                            data.yex.map((eachExample, index) => {\n                                        return <p key={eachExample} className=\"text text-danger font-italic\">\"{eachExample}\"</p>\n                            })\n                        }\n                    </div>\n                    \n                    <div>\n                        {\n                            data.ex.map((eachExample, index) => {\n                                    return <p key={eachExample} className=\"text-muted font-italic\">\"{eachExample}\"</p>\n                            })\n                        }\n                    </div>\n                    <div>{\n                        data.en.map(eachMeaning => {\n                            return (\n                                <div key={eachMeaning.en}>\n                                    <p className=\"text-primary\"><span key={eachMeaning.cat}>({eachMeaning.cat})</span> {eachMeaning.en}</p>\n                                </div>\n                            );\n                        } )\n                    }</div>\n                    \n                </div>\n                <div className=\"col-sm-4\">\n                    {\n                        data.img.map(eachImage => {\n                           return <img key={eachImage} src={eachImage} style={{width:'95%'}}  className=\"d-inline fluid img-thumbnail\" alt=\"seachImage\"/>\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n    renderList() {\n        if(this.props.dicts.length > 4){\n            return this.props.dicts.map((dict,index) => {\n                    if(dict.userId === this.props.currentUserId){\n                    return (\n                      <div key={index} className=\"border rounded pl-3 mt-3 py-2 border-secondary showMeaning\">\n                                {this.renderMeaning(dict, index)}\n                      </div>  \n                    )} else {\n                    return <div key={index}></div>\n                }\n            })\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                <Header displaySignIn={true}/>\n                <div key={'container'} className=\"container\">\n                        <h1 key={'What you have learn so far'} className=\"mt-5 mb-4 pb-5 text-primary\" style={{fontFamily: 'Coiny, cursive'}}><u>{this.props.currentUserId ? 'What you have learned so far:': null}</u></h1>\n                        <Pagination/>\n                        <div key={'renderList'}  className=\"mb-2\">\n                            {this.renderList()}\n                        </div>\n                        <div className=\"float-right mb-5\">\n                            <Pagination/>\n                        </div>\n                </div>\n            </div>\n            );\n        \n    }\n}\n    \n\nconst mapStateToProps = (state) => {\n    return {\n        dicts: Object.values(state.user),\n        currentUserId: state.auth.userId,\n        isSignedIn: state.auth.isSignedIn,\n        post: state.postex\n    }\n}\n\n\nexport default connect(mapStateToProps,{deleteWord,fetchDictPerPage, postMyExample})(WordList);","import React from 'react';\nimport { connect } from 'react-redux'\n// import {renderGoogle, renderOxford, renderImage, test} from './helper'\nimport './styles/ShowStyle.css';\nimport { showExample, translateEngExample, showEngMean, showEngExample, updateSaveMeaning , createGoogle, removeEngMean, ShowMyExample, UpdateMeaning, showImage } from '../../actions'\nimport Header from '../Header'\nclass WordShow extends React.Component {\n    constructor(props) {\n        super(props)\n        this.vietMeaning = [];\n        this.engMeaning = [];\n        this.engExample = [];\n        this.myExample = [];\n        this.image = [];\n        this.state = {\n            myExample:'',\n            engMeanCheckBox: false,\n            opacity: 0,\n            index: null,\n            def : null,\n            display: 'none',\n            img:null,\n            trans:null,\n            translate:[]\n        }\n    }\n    renderMainpage = () => {\n        if (!(Object.keys(this.props.showData.dict).length === 0)) {\n            return (\n                <div className = \"mx-5 mt-4\">\n                    <div className=\"row\">\n                        <div key={'renderGoolge'} className=\"google col-md-2 mt-3\"> {this.renderGoogle(this.props.showData.dict.google)}</div>\n                        <div key={'renderOxford'} className=\"oxford col-md-7\" style={{lineHeight: 'normal'}}> {this.renderOxford(this.props.showData.dict.oxford)} </div>\n                        <div key={'renderBing'} className=\"col-md-3 border rounded mt-2\"> {this.renderSaveSection(this.props.showData)}</div>\n                    </div>\n                    <section className=\"mt-3\">\n                            {this.renderImage(this.props.showData.dict.image)}\n                    </section>\n                </div>\n            );\n            \n        } else {\n            return <div></div>\n        }\n    }\n    render () {\n        return (\n            <div>\n                <Header displaySignIn={true}/>\n                {this.renderMainpage()}\n            </div>\n        );\n    }\n    \n    \n    onFormSubmitExample = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.ShowMyExample(this.state.myExample)\n        this.setState({myExample: ''});\n    }\n    handleExampleChange = (e) => {\n        this.setState({myExample: e.target.value});\n    }\n    removeMyExample = (eachExample) => {\n        this.props.ShowMyExample(eachExample)\n    }\n    renderShowMyExample = (data) => {\n        if(data.yex){\n            return data.yex.map((eachExample,index) => {\n                return (\n                    <div key={index} className=\"d-flex justify-content-between bd-highlight\">\n                        <div><p key={eachExample} className=\"font-italic text-danger\">\"{eachExample}\"</p></div>\n                        <div className=\"text-danger\"><button onClick={e => this.removeMyExample(eachExample)}className=\"btn btn-danger btn-xs\">X</button></div>\n                     </div>    \n                );\n            })\n        }\n        \n    }\n    renderShowVietMeaning = (data) => {\n        if(data.vi) {\n            return data.vi.map((eachVietMean,index) => {\n                return <span key={index}>, {eachVietMean}</span>\n                })\n            }\n        \n    }\n    renderFirstVietMeaning = (data) => {\n        if(data.data) {\n            return <span>{data.data.vi[0]}</span>\n        }\n    }\n    removeEngmean = (eachEngMean) => {\n        this.props.removeEngMean(eachEngMean)\n    }\n    renderShowEngMeaning = (data) => {\n        if(data.en) {\n            return data.en.map((eachEngMean, index) => {\n                return (\n                    <div key={index} className=\"d-flex justify-content-between bd-highlight\">\n                        <div><p className=\"text-primary\">{eachEngMean.en[0]}</p></div>\n                        <div className=\"text-danger\"><button onClick={e => this.removeEngmean(eachEngMean)} className=\"btn btn-danger btn-xs\">X</button></div>\n                     </div>  \n                );\n            })\n        }\n    }\n    renderShowExample = (data) => {\n        if(data){\n            if (data.ex){\n                return data.ex.map((eachEngExample,index) => {\n                    return (\n                    <div key={index} className=\"d-flex justify-content-between bd-highlight\">\n                        <div><p className=\"font-italic text-danger\">\"{eachEngExample}\"</p></div>\n                        <div className=\"text-danger\"><button onClick={e => this.insertEngExample(eachEngExample)} className=\"btn btn-danger btn-xs\">X</button></div>\n                     </div>  \n                    );\n                })\n            }\n        }\n    }\n    renderShowpImage = (data) => {\n        let image = data.img\n    if(image) {\n            return image.map((eachimage,index) => {\n                return (\n                    <div key={index} className=\"image-border-icon d-inline mt-2\" onClick={e => this.removeSaveImage(eachimage)}>\n                        <img src={eachimage} key={eachimage} className='image-display-icon d-inline' alt=\"from-bing\"/>\n                    </div>                \n                );\n            })\n        } else {\n            return null\n        }\n    \n    }\n    removeSaveImage = (image) => {\n        this.props.showImage(image)\n    }\n    onSaveExampleClick = () => {\n        this.props.updateSaveMeaning()\n    }\n    renderSaveSection(data) {\n        if(data.dict.data){\n        return (\n            <div>\n                <form className=\"pt-2\" onSubmit={this.onFormSubmitExample}>\n                    <input onChange={this.handleExampleChange} value={this.state.myExample} type=\"text\" className=\"your-example mt-2\" placeholder=\"Input your example here...\"/>\n                </form>\n                <hr/>\n                <p className=\"display-4 d-inline\">{data.dict.data.word}</p>\n                <button onClick={e => this.onSaveExampleClick()} className=\"btn btn-primary d-inline float-right\">Save</button>\n                <div className=\"mt-2 text-success h4\"><span>{this.renderFirstVietMeaning(data.dict)}</span>{this.renderShowVietMeaning(data.post)}</div>\n                <hr/>\n                <div>{this.renderShowMyExample(data.post)}</div>\n                <div>{this.renderShowExample(data.post)}</div>\n                <div>{this.renderShowEngMeaning(data.post)}</div>\n                <div>{this.renderShowpImage(data.post)}</div>\n            </div>)\n        }\n    }\n    //-------------------------Helper Method-------------------------------------//\n    onSubmitTheCorrectWord = (formValues) => {\n        this.props.createGoogle(formValues)\n    }\n    renderGoogle = (google, googleClickMe) => {\n        if(google) {\n                if(google.sentences) {\n                    return (\n                            <div>\n                                <p key={google.sentences[0].trans} className=\"font-weight-bold h1\">{google.sentences[0].trans}</p>\n                                <div>\n                                    {this.renderGoogleElement(google.dict)}\n                                </div>\n                            </div>\n                    );\n                } else {\n                    return (\n                        <div>\n                        <p className=\"text text-danger h3\"> {google[1]} ?  </p>\n                        <p className=\"text text-success h4 mt-3\">Did you mean: </p>\n                        <button onClick={e => this.onSubmitTheCorrectWord({word: google[0]})} className=\"btn btn-success btn-lg\">{'>>'} {google[0]} </button>\n                        </div>\n                     );\n                } \n            } else {\n                return null\n            }\n        }\n    insertVietmean (vietMean) {\n        this.props.showExample(vietMean)\n    }\n    renderGoogleElement = (dicts) => {\n        if(dicts){\n            return dicts.map((dict,index1) => {\n                return (\n                    <div key={index1}>\n                        <p key={Math.floor(Math.random() * 1000)} className=\"text-uppercase text-success mt-2\">{dict.pos}</p>\n                        {dict.entry.map((vietMean,index) => {\n                              return ( \n                                    <div key={index}>\n                                        <div key={index} className=\"custom-control custom-checkbox\" >\n                                            <input key={`${vietMean.word}input`} type=\"checkbox\" className=\"custom-control-input checkboxHide\" id={vietMean.word} onClick={(e) => this.insertVietmean(vietMean.word)}/>\n                                            <label key={`${vietMean.word}label`}className=\"custom-control-label font-weight-bold showCheckBox\" htmlFor={vietMean.word}>{vietMean.word}</label>\n                                        </div>\n                                        <p key={`${vietMean.word}p`} className=\"pl-3 font-italic\">\"{vietMean.reverse_translation.map(each => {return `${each} `})}\"</p>\n                                    </div>\n                              );\n                        })}\n                    </div>\n                );\n            })\n        } else {\n            return null\n        }\n    } \n    playSound = (audio) => {\n       const sound = new Audio(audio)\n       sound.play();\n    }\n    renderOxford = (oxford) => {\n    if(oxford) {\n        return (\n                <div key={'oxford'} className=\"border-left\">\n                    <div key={oxford[0].text} className=\"ml-2\">\n                        <p className=\"display-4\">{oxford[0].text}</p>\n                        <span onClick={e => this.playSound(this.renderOxfordAudio(oxford).audio) }>\n                            <audio key={this.renderOxfordAudio(oxford).audio} src={this.renderOxfordAudio(oxford).audio} autoPlay>\n                            </audio><img src=\"https://img.icons8.com/metro/26/000000/speaker.png\" alt=\"speaker\" width=\"20px\"/>\n                        </span> <span className=\"h5\"> [{this.renderOxfordAudio(oxford).phonetic}]</span>\n                        <div key={this.renderOxfordBody(oxford)} className=\"mt-2\">{this.renderOxfordBody(oxford)}</div>\n                    </div>\n                </div>\n        );\n    } else {\n        return null\n    }\n}\n    renderOxfordAudio = (oxford) => {\n    let audiolink = [];\n    let phoneticSpelling = [];\n    oxford.map(pro1 => {\n        if(pro1.pronunciations){\n            pro1.pronunciations.forEach(pro2 => {\n                audiolink.push(pro2.audioFile);\n                if(pro2.phoneticSpelling && pro2.phoneticNotation === 'IPA'){\n                    phoneticSpelling.push(pro2.phoneticSpelling);\n                }\n            });\n        }\n        return null\n    })\n    return {audio: audiolink[0], phonetic: phoneticSpelling[0] }\n}\n    renderOxfordBody = (oxford) => {\n        if(oxford) {\n        return oxford.map((eachOxford, index) => {\n                return (\n                    <div key={index}>\n                        <p key={eachOxford.lexicalCategory} id=\"lexicalCategory\" className=\"text-success text-uppercase h5 mt-3\">{eachOxford.lexicalCategory.text}</p>\n                        <div key={eachOxford}> {this.renderMeaningExample(eachOxford, eachOxford.lexicalCategory)}</div>\n                    </div>\n                );\n            });\n            \n    \n        } else {\n            return null\n        }\n    }\n    renderMeaningExample = (eachOxford, lexicalCategory) => {\n    if (eachOxford) {\n        return eachOxford.entries.map((entries, index1) => {\n                if (entries.senses) {\n                    return entries.senses.map((sense, index2) => {\n                        return (\n                            <div key={index2}>\n                                <div id=\"mainDefinition\">{this.renderMainDefinition(sense, index2, lexicalCategory)}</div>\n                                <div id=\"mainExample\">{this.renderMainExample(sense)}</div>\n                                <div id=\"renderSubMean\">{this.renderSubMean(sense, index2 ,lexicalCategory)}</div>\n                            </div>\n                        );\n                    })\n                } else {\n                    return null\n                }\n            })\n        } else {\n            return null\n        }\n    }\n    mouseEnter = (definition ) => {\n        this.setState({\n            def: definition\n        })\n    }\n    mouseLeave = () => {\n        this.setState({def: null})\n    }\n    insertEngmean = (engMeaning, lexicalCategory) => {\n        this.props.showEngMean(engMeaning, lexicalCategory)\n    }\n    renderMainDefinition = (sense, index , lexicalCategory) => {\n        if (sense.definitions) {\n            return (\n                    <div key={index} className=\"pr-5\">\n                        <p key={sense.definitions[0]} className=\"font-weight-bold d-inline\" value={sense.definitions[0]}  id=\"mainExample\">{index+1}. {sense.definitions[0]}</p>\n                        <div className=\"d-inline\" onMouseEnter={e => {this.mouseEnter(sense.definitions[0])}} onMouseLeave={this.mouseLeave}\n                                    style={{opacity: this.state.def === sense.definitions[0] ? '0.7': '0.1'}} >\n                                <button\n                                    className=\"btn btn btn-outline-secondary btn-xs ml-2 d-inline\" \n                                    onClick={(e) => {this.translateEngExample(sense.definitions[0])}}>\n                                        Trans\n                                </button>\n                                <button\n                                    className=\"btn btn btn-outline-success btn-xs ml-1 d-inline\" \n                                    onClick={(e) => this.insertEngmean(sense.definitions[0], lexicalCategory)}\n                                >\n                                    Save\n                                </button>\n                        </div>\n                        <span className=\"font-weight-bold d-block text-primary\">{this.renderVietTranslate(sense.definitions[0])}</span>\n                    </div>\n            );\n        } else {\n            return null\n        }\n    }\n    insertEngExample = (engExample) => {\n        this.props.showEngExample(engExample)\n    }\n    translateEngExample = async (example) => {\n        const myTranslate = await this.props.translateEngExample(example)\n        let myTrans = this.state.translate\n        myTrans.push({ex: example, trans:myTranslate.data.trans})\n        this.setState({trans: myTrans})\n    }\n    renderMainExample = (sense) => {\n    if (sense) {\n            if (sense.examples){\n                return sense.examples.map((example,index) => {\n                    return ( \n                        <div key={index} className=\"pr-5\">\n                            <p id=\"mainExample\" className=\"font-italic ml-2 d-inline\">\"{example.text}\"</p>\n                            <div className=\"d-inline\" onMouseEnter={e => {this.mouseEnter(example.text)}} onMouseLeave={this.mouseLeave}\n                                    style={{opacity: this.state.def === example.text ? '0.7': '0.1'}} \n                                    >\n                                <button\n                                    className=\"btn btn btn-outline-secondary btn-xs ml-2 d-inline\" \n                                    onClick={(e) => {this.translateEngExample(example.text)}}>\n                                        Trans\n                                </button>\n                                <button\n                                    className=\"btn btn btn-outline-success btn-xs ml-1 d-inline\" \n                                    onClick={(e) => {this.insertEngExample(example.text)}}\n                                >\n                                        Save\n                                </button>\n                            </div>\n                            <span className=\"font-italic ml-2 d-block text-primary\">{this.renderVietTranslate(example.text)}</span>\n                        </div>\n                        );\n                })\n            } else {\n                return null\n            }\n        } else {\n            return null\n        }\n    }\n    renderVietTranslate = (example) => {\n        if(this.state.trans){\n            return this.state.trans.map(eachExample => {\n                                if(eachExample.ex === example){\n                                    return `\"${eachExample.trans}\"`\n                                }\n                                else {\n                                    return null\n                                }\n                            })\n        }\n    }\n    renderSubMean = (sense, index, lexicalCategory ) => {\n    if (sense){\n            if (sense.subsenses){\n                return sense.subsenses.map((subsense, submeanIndex) => {\n                    if(subsense) {\n                        return (\n                            <div key={submeanIndex} >\n                                <div>\n                                        <p id=\"subMeaning\" className=\"ml-3 font-weight-bold d-inline\">{index+1}.{submeanIndex+1} {this.renderSubMeaning(subsense)}\n                                        </p>\n                                    <div className=\"d-inline\" onMouseEnter={e => {this.mouseEnter(this.renderSubMeaning(subsense))}} onMouseLeave={this.mouseLeave}\n                                        style={{opacity: this.state.def === this.renderSubMeaning(subsense) ? '0.7': '0.1'}} >\n                                        <button\n                                            className=\"btn btn btn-outline-secondary btn-xs ml-2 d-inline\" \n                                            onClick={(e) => {this.translateEngExample(this.renderSubMeaning(subsense))}}>\n                                                Trans\n                                        </button>\n                                        <button\n                                            className=\"btn btn btn-outline-success btn-xs ml-1 d-inline\" \n                                            onClick={(e) => this.insertEngmean(this.renderSubMeaning(subsense),lexicalCategory)}\n                                        >\n                                            Save\n                                        </button>\n                                    </div>\n                                    <span className=\"d-block ml-3 font-weight-bold text-primary\">{this.renderVietTranslate(this.renderSubMeaning(subsense))}</span>\n                                </div>\n                                <div id=\"subExamples\">{this.renderSubExample(subsense)}</div>\n                            </div>\n                        );\n                    } else {\n                        return null\n                    }\n                })\n            } else {\n                return null\n            }\n        } else {\n            return null\n        }\n    }\n    renderSubMeaning = (subsense) => {\n        if(subsense) {\n            if(subsense.definitions) {\n                    return subsense.definitions[0]\n            } else {\n                if (subsense.shortDefinitions){\n                    return subsense.shortDefinitions[0]\n                } else {\n                    if(subsense.crossReferenceMarkers){\n                        return subsense.crossReferenceMarkers[0]\n                    }\n                }\n            }\n        } else {\n            return null\n        }\n    }\n    renderSubExample = (subsense) => {\n        if(subsense){\n            if(subsense.examples){\n                return subsense.examples.map((example,index3) => {\n                    return (\n                    <div key={index3} className=\"pr-5\">\n                        <p id=\"subExamples\" className=\"ml-5 font-italic d-inline\">\"{example.text}\"\n                        </p>\n                        <div className=\"d-inline\" onMouseEnter={e => {this.mouseEnter(example.text)}} onMouseLeave={this.mouseLeave}\n                                    style={{opacity: this.state.def === example.text ? '0.7': '0.1'}} \n                                    >\n                                <button\n                                    className=\"btn btn btn-outline-secondary btn-xs ml-2 d-inline\" \n                                    onClick={(e) => {this.translateEngExample(example.text)}}>\n                                        Trans\n                                </button>\n                                <button\n                                    className=\"btn btn btn-outline-success btn-xs ml-1 d-inline\" \n                                    onClick={(e) => {this.insertEngExample(example.text)}}\n                                >\n                                        Save\n                                </button>\n                        </div>\n                        <span className=\"ml-5 font-italic d-block text-primary\">{this.renderVietTranslate(example.text)}</span>\n                    </div>\n                    );\n                })\n            } else {\n                return null\n            }\n            \n        } else {\n            return null\n        }\n    }\n    selectImage = (eachimage) => {\n        this.setState({img: eachimage})\n        this.props.showImage(eachimage)\n    }\n    renderImage = (bing) => {\n    if(bing) {\n            return bing.map((eachimage,index) => {\n                return (\n                    <div key={index} className=\"image-border\" onClick={e => this.selectImage(eachimage[0])}>\n                        <img src={eachimage[0]} className={this.state.img === eachimage[0] ? 'image-display bother-thick' : 'image-display'} alt=\"from-bing\"/>\n                    </div>                \n                );\n            })\n        } else {\n            return null\n        }\n    }\n    }\n\nconst mapStateToProps = (state) => {\n    return {showData: state}\n}\n\n\nexport default connect(mapStateToProps, {translateEngExample, updateSaveMeaning,createGoogle,removeEngMean,showExample, showEngMean, showEngExample, ShowMyExample, UpdateMeaning, showImage})(WordShow);\n","import React from 'react'\nimport './styles/FrontPage.css'\nimport GoogleAuth from '../GoogleAuth'\nimport Header from '../Header'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport {createGoogle} from '../../actions'\n\n\nclass FrontPage extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            signIn: false\n        };\n    }\n    \n    onSubmit = (formValues) => {\n        this.props.createGoogle(formValues)\n    }\n    \n    renderInput = ({input, label, meta}) => {\n        return (\n            <div>\n                <input {...input} className=\"form-control mr-sm-2 d-25\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" name=\"word\" autoFocus/>\n                <button className=\"btn btn btn-primary my-sm-0\" type=\"submit\">Search</button>\n            </div>\n        );\n    }\n    \n    renderGoogleAuthButton = () => {\n        if(!this.props.isSignedIn){\n            return <GoogleAuth className=\"btn-lg\" displaySignIn={true} />\n        } else {\n            return (\n                <div>\n                    <h5>What are you looking for: </h5>\n                    <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"form-inline\" name=\"word\" autoComplete=\"off\">\n                        <Field name=\"word\" component={this.renderInput} />\n                    </form>\n                </div>\n            );\n        }\n    }\n    \n    render() {\n        return (\n            <div className=\"fontpage\">\n                <Header displaySignIn={this.props.isSignedIn}/>\n                <div class=\"jumbotron container mt-2\">\n                  <h1 class=\"display-4\">English Dictionary</h1>\n                  <p class=\"lead\">This is a new way to learn and have fun with English Dictionary. Everything you need are in just one place and only one click.</p>\n                  <div className=\"mt-4\">\n                    {this.renderGoogleAuthButton()}\n                  </div>\n                </div>\n            </div>\n        );\n    }\n    \n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        isSignedIn: state.auth.isSignedIn\n    }\n}\n\n\nconst formWrapped = reduxForm({\n    form: 'firstCreate'\n})(FrontPage);\n\nexport default connect(mapStateToProps,{createGoogle})(formWrapped)","import React from 'react';\nimport { Router, Route} from 'react-router-dom';\nimport WordCreate from './words/WordCreate';\nimport WordDelete from './words/WordDelete';\nimport WordEdit from './words/WordEdit';\nimport WordList from './words/WordList';\nimport WordShow from './words/WordShow';\nimport FrontPage from './words/FrontPage';\n\nimport history from '../history';\n\nconst App = () => {\n    return (\n        <Router history={history}>\n            <div>\n                <Route path='/' exact component = {FrontPage} />\n                <Route path='/review' exact component= {WordList} />\n                <Route path='/words/new' exact component= {WordCreate} />\n                <Route path='/words/edit/:id' exact component= {WordEdit} />\n                <Route path='/words/delete' exact component= {WordDelete} />\n                <Route path='/words/show' exact component= {WordShow} />\n            </div>\n        </Router>\n    );\n    \n};\n\nexport default App;","import { SIGN_IN, SIGN_OUT } from '../actions/types'\nimport _ from 'lodash'\n\nconst INITIAL_STATE = {\n    isSignedIn: null,\n    userId: null\n}\n// Remember to save the Name of the User on the payload property\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case SIGN_IN:\n            return {...state, isSignedIn:true, userId: action.payload}\n        case SIGN_OUT:\n            return {..._.omit(state),isSignedIn:false, userId: null};\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport userReducer from './userReducer'\nimport transReducer from './transReducer'\nimport postReducer from './postReducer'\nimport postexReducer from './postexReducer'\n\nimport authReducer from './authReducer'\n\nexport default combineReducers ({\n    auth: authReducer,\n    form: formReducer,\n    user: userReducer,\n    dict: transReducer,\n    post: postReducer,\n    postex: postexReducer\n})\n","import _ from 'lodash';\nimport {\n        FETCH_DICTS,\n        FETCH_DICT,\n} from '../actions/types';\n\n\nexport default (state = {}, action) => {\n    switch(action.type){\n        case FETCH_DICTS:\n            return {...state, ..._.mapKeys(action.payload, '_id')};\n        case 'FETCH_DICTS_PER_PAGE':\n            let newState = {}\n            return {...newState, ..._.mapKeys(action.payload.data, '_id'), total: action.payload.total, page: action.payload.page, pages: action.payload.pages };\n        case FETCH_DICT:\n            return {...state, [action.payload._id]: action.payload};\n        case 'CLEAR_USER':\n            return _.omit(state, Object.keys(state));    \n        case 'DELETE_WORD':\n            return _.omit(state, [action.payload.toString()]);  \n        default:\n            return state;\n    }\n};","import _ from 'lodash';\nimport {\n        DELETE_DICT,\n        EDIT_DICT\n} from '../actions/types';\n\n\nexport default (state = {}, action) => {\n    switch(action.type){\n        case 'CREATE_GOOGLE':\n            return Object.assign({}, state, action.payload);\n        case 'CREATE_OXFORD':\n            return Object.assign({}, state, action.payload);\n        case 'CREATE_IMAGE':\n            return Object.assign({}, state, action.payload);\n        case 'TRANSLATE':\n            return Object.assign({}, state, action.payload);\n        case EDIT_DICT:\n            return {...state, [action.payload._id]: action.payload.mex};\n        case DELETE_DICT:\n            return _.omit(state, action.payload);\n        case 'CLEAR_DICT':\n            return _.omit(state, 'google', 'oxford', 'image','data');\n        case 'CLEAR_TRANSLATE':\n            return _.omit(state, 'trans');    \n        default:\n            return state;\n    }\n};","import _ from 'lodash';\n\nexport default (state = {}, action) => {\n    switch(action.type){\n        case 'SHOW_VIET_MEAN':\n            if(!state.vi){\n                return {...state, vi:[action.payload]}\n            } else {\n                if (!state.vi.includes(action.payload)){\n                   return {...state, vi:state.vi.concat([action.payload])} \n                } else {\n                    return {...state, vi:state.vi.filter(word => word !== action.payload)}\n                }\n            }\n\n        case 'SHOW_ENG_EXAMPLE':\n            if(!state.ex){\n                return {...state, ex:[action.payload]}\n            } else {\n                if (!state.ex.includes(action.payload)){\n                   return {...state, ex:state.ex.concat([action.payload])} \n                } else {\n                    return {...state, ex:state.ex.filter(word => word !== action.payload)}\n                }\n            }\n   \n        case 'SHOW_MY_EXAMPLE':\n            if(!state.yex){\n                return {...state, yex:[action.payload]}\n            } else {\n                if (!state.yex.includes(action.payload)){\n                   return {...state, yex:state.yex.concat([action.payload])} \n                } else {\n                    return {...state, yex:state.yex.filter(word => word !== action.payload)}\n                }\n            }\n        case 'SHOW_IMAGE':\n            if(!state.img){\n                return {...state, img:[action.payload]}\n            } else {\n                if (!state.img.includes(action.payload)){\n                   return {...state, img:state.img.concat([action.payload])} \n                } else {\n                    return {...state, img:state.img.filter(word => word !== action.payload)}\n                }\n            }\n            \n            \n        case 'SHOW_ENG_MEAN':\n            \n            // if(!state.en){\n            //     return {...state, en:[action.payload]}\n            // } else {\n            //     let newStateShow = {...state};\n            //     newStateShownewStateShow.en.map((eachEngMean, index) => {\n            //         if(JSON.stringify(eachEngMean) === JSON.stringify(action.payload)){\n            //             console.log(\"HAV THIS ELEMENT\", index)\n            //             console.log(\"newState before remove\", newStateShow)\n            //             newStateShow.en.splice(index, 1);\n            //             console.log(\"newState after remove\", newStateShow)\n            //             return newStateShow\n            //         } else {\n            //             console.log(\"THERE ARE NO DUPLICATE: STATE: \", state)\n            //             console.log(\"ADDING STATE \", {...state, en:state.en.concat([action.payload])})\n            //             return {...newStateShow, en:newStateShow.en.concat([action.payload])}\n            //         }\n            //     })\n                 \n            // }\n            // return newStateShow\n            if(!state.en){\n                return {...state, en:[action.payload]}\n            } else {\n                if (!state.en.includes(action.payload)){\n                  return {...state, en:state.en.concat([action.payload])} \n                } else {\n                    return {...state, yex:state.en.filter(word => word !== action.payload)}\n                }\n            }\n        case 'REMOVE_ENG_MEAN':\n            let newState = {...state};\n            newState.en.map((eachEngMean, index) => {\n                if(JSON.stringify(eachEngMean) === JSON.stringify(action.payload)){\n                    newState.en.splice(index, 1);\n                    return newState\n                } else {\n                    return newState\n                }\n            })\n            return newState\n        case 'CLEAR_POST':\n            return _.omit(state, 'vi', 'en', 'ex', '_id', 'yex', 'img');\n        default:\n            return state;\n    }\n};","\nexport default (state = {}, action) => {\n    switch(action.type){\n        case 'DISPLAY_MY_EXAMPLE':\n            if(!state.yex){\n                return {...state, yex:[action.payload]}\n            } else {\n                return {...state, yex:state.yex.concat([action.payload])} \n            }\n        default:\n            return state;\n    } \n};","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport reduxThunk from 'redux-thunk'\n\nimport App from './components/App';\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDom.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ,\n    document.querySelector('#root')\n);"],"sourceRoot":""}